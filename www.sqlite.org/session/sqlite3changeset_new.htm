<!DOCTYPE html><html><head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

<title>Obtain new.* Values From A Changeset Iterator</title>
<!-- path=../ -->
</head>
<body>

<script>
function toggle_div(nm) {
var w = document.getElementById(nm);
if( w.style.display=="block" ){
w.style.display = "none";
}else{
w.style.display = "block";
}
}
function toggle_search() {
var w = document.getElementById("searchmenu");
if( w.style.display=="block" ){
w.style.display = "none";
} else {
w.style.display = "block";
setTimeout(function(){
document.getElementById("searchbox").focus()
}, 30);
}
}
function div_off(nm){document.getElementById(nm).style.display="none";}
window.onbeforeunload = function(e){div_off("submenu");}
/* Disable the Search feature if we are not operating from CGI, since */
/* Search is accomplished using CGI and will not work without it. */
if( !location.origin || !location.origin.match || !location.origin.match(/http/) ){
document.getElementById("search_menubutton").style.display = "none";
}
/* Used by the Hide/Show button beside syntax diagrams, to toggle the */
function hideorshow(btn,obj){
var x = document.getElementById(obj);
var b = document.getElementById(btn);
if( x.style.display!='none' ){
x.style.display = 'none';
b.innerHTML='show';
}else{
x.style.display = '';
b.innerHTML='hide';
}
return false;
}
var antiRobot = 0;
function antiRobotGo(){
if( antiRobot!=3 ) return;
antiRobot = 7;
var j = document.getElementById("mtimelink");
if(j && j.hasAttribute("data-href")) j.href=j.getAttribute("data-href");
}
function antiRobotDefense(){
document.body.onmousedown=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousedown=null;
}
document.body.onmousemove=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousemove=null;
}
setTimeout(function(){
antiRobot |= 1;
antiRobotGo();
}, 100)
antiRobotGo();
}
antiRobotDefense();
</script>
<a href="intro.htm"><h2>Session Module C Interface</h2></a><h2>Obtain new.* Values From A Changeset Iterator</h2><blockquote><pre>int sqlite3changeset_new(
  sqlite3_changeset_iter *pIter,  /* Changeset iterator */
  int iVal,                       /* Column number */
  sqlite3_value **ppValue         /* OUT: New value (or NULL pointer) */
);
</pre></blockquote><p>
The pIter argument passed to this function may either be an iterator
passed to a conflict-handler by <a href="sqlite3changeset_apply.htm">sqlite3changeset_apply()</a>, or an iterator
created by <a href="sqlite3changeset_start.htm">sqlite3changeset_start()</a>. In the latter case, the most recent
call to <a href="sqlite3changeset_next.htm">sqlite3changeset_next()</a> must have returned SQLITE_ROW. 
Furthermore, it may only be called if the type of change that the iterator
currently points to is either <a href="../c3ref/c_alter_table.html">SQLITE_UPDATE</a> or <a href="../c3ref/c_alter_table.html">SQLITE_INSERT</a>. Otherwise,
this function returns <a href="../rescode.html#misuse">SQLITE_MISUSE</a> and sets *ppValue to NULL.</p>

<p>Argument iVal must be greater than or equal to 0, and less than the number
of columns in the table affected by the current change. Otherwise,
<a href="../rescode.html#range">SQLITE_RANGE</a> is returned and *ppValue is set to NULL.</p>

<p>If successful, this function sets *ppValue to point to a protected
sqlite3_value object containing the iVal'th value from the vector of 
new row values stored as part of the UPDATE or INSERT change and
returns SQLITE_OK. If the change is an UPDATE and does not include
a new value for the requested column, *ppValue is set to NULL and 
SQLITE_OK returned. The name of the function comes from the fact that 
this is similar to the "new.*" columns available to update or delete 
triggers.</p>

<p>If some other error occurs (e.g. an OOM condition), an SQLite error code
is returned and *ppValue is set to NULL.
</p><p>See also lists of
  <a href="objlist.htm">Objects</a>,
  <a href="constlist.htm">Constants</a>, and
  <a href="funclist.htm">Functions</a>.</p>

</body></html>