<!DOCTYPE html><html><head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

<title>Options for sqlite3session_object_config</title>
<!-- path=../ -->
</head>
<body>

<script>
function toggle_div(nm) {
var w = document.getElementById(nm);
if( w.style.display=="block" ){
w.style.display = "none";
}else{
w.style.display = "block";
}
}
function toggle_search() {
var w = document.getElementById("searchmenu");
if( w.style.display=="block" ){
w.style.display = "none";
} else {
w.style.display = "block";
setTimeout(function(){
document.getElementById("searchbox").focus()
}, 30);
}
}
function div_off(nm){document.getElementById(nm).style.display="none";}
window.onbeforeunload = function(e){div_off("submenu");}
/* Disable the Search feature if we are not operating from CGI, since */
/* Search is accomplished using CGI and will not work without it. */
if( !location.origin || !location.origin.match || !location.origin.match(/http/) ){
document.getElementById("search_menubutton").style.display = "none";
}
/* Used by the Hide/Show button beside syntax diagrams, to toggle the */
function hideorshow(btn,obj){
var x = document.getElementById(obj);
var b = document.getElementById(btn);
if( x.style.display!='none' ){
x.style.display = 'none';
b.innerHTML='show';
}else{
x.style.display = '';
b.innerHTML='hide';
}
return false;
}
var antiRobot = 0;
function antiRobotGo(){
if( antiRobot!=3 ) return;
antiRobot = 7;
var j = document.getElementById("mtimelink");
if(j && j.hasAttribute("data-href")) j.href=j.getAttribute("data-href");
}
function antiRobotDefense(){
document.body.onmousedown=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousedown=null;
}
document.body.onmousemove=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousemove=null;
}
setTimeout(function(){
antiRobot |= 1;
antiRobotGo();
}, 100)
antiRobotGo();
}
antiRobotDefense();
</script>
<a href="intro.htm"><h2>Session Module C Interface</h2></a><h2>Options for sqlite3session_object_config</h2><blockquote><pre>#define SQLITE_SESSION_OBJCONFIG_SIZE  1
#define SQLITE_SESSION_OBJCONFIG_ROWID 2
</pre></blockquote><p>
The following values may passed as the the 2nd parameter to
sqlite3session_object_config().</p>

<p></p><dt>SQLITE_SESSION_OBJCONFIG_SIZE </dt><dd>
  This option is used to set, clear or query the flag that enables
  the <a href="sqlite3session_changeset_size.htm">sqlite3session_changeset_size()</a> API. Because it imposes some
  computational overhead, this API is disabled by default. Argument
  pArg must point to a value of type (int). If the value is initially
  0, then the sqlite3session_changeset_size() API is disabled. If it
  is greater than 0, then the same API is enabled. Or, if the initial
  value is less than zero, no change is made. In all cases the (int)
  variable is set to 1 if the sqlite3session_changeset_size() API is
  enabled following the current call, or 0 otherwise.<p></p>

<p>  It is an error (SQLITE_MISUSE) to attempt to modify this setting after 
  the first table has been attached to the session object.</p>

<p></p></dd><dt>SQLITE_SESSION_OBJCONFIG_ROWID </dt><dd>
  This option is used to set, clear or query the flag that enables
  collection of data for tables with no explicit PRIMARY KEY.<p></p>

<p>  Normally, tables with no explicit PRIMARY KEY are simply ignored
  by the sessions module. However, if this flag is set, it behaves
  as if such tables have a column "_rowid_ INTEGER PRIMARY KEY" inserted
  as their leftmost columns.</p>

<p>  It is an error (SQLITE_MISUSE) to attempt to modify this setting after 
  the first table has been attached to the session object.
</p><p>See also lists of
  <a href="objlist.htm">Objects</a>,
  <a href="constlist.htm">Constants</a>, and
  <a href="funclist.htm">Functions</a>.</p>

</dd></body></html>