<!DOCTYPE html><html><head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

<title>Constraint values in xBestIndex()</title>
<!-- path=../ -->
</head>
<body>

<script>
function toggle_div(nm) {
var w = document.getElementById(nm);
if( w.style.display=="block" ){
w.style.display = "none";
}else{
w.style.display = "block";
}
}
function toggle_search() {
var w = document.getElementById("searchmenu");
if( w.style.display=="block" ){
w.style.display = "none";
} else {
w.style.display = "block";
setTimeout(function(){
document.getElementById("searchbox").focus()
}, 30);
}
}
function div_off(nm){document.getElementById(nm).style.display="none";}
window.onbeforeunload = function(e){div_off("submenu");}
/* Disable the Search feature if we are not operating from CGI, since */
/* Search is accomplished using CGI and will not work without it. */
if( !location.origin || !location.origin.match || !location.origin.match(/http/) ){
document.getElementById("search_menubutton").style.display = "none";
}
/* Used by the Hide/Show button beside syntax diagrams, to toggle the */
function hideorshow(btn,obj){
var x = document.getElementById(obj);
var b = document.getElementById(btn);
if( x.style.display!='none' ){
x.style.display = 'none';
b.innerHTML='show';
}else{
x.style.display = '';
b.innerHTML='hide';
}
return false;
}
var antiRobot = 0;
function antiRobotGo(){
if( antiRobot!=3 ) return;
antiRobot = 7;
var j = document.getElementById("mtimelink");
if(j && j.hasAttribute("data-href")) j.href=j.getAttribute("data-href");
}
function antiRobotDefense(){
document.body.onmousedown=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousedown=null;
}
document.body.onmousemove=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousemove=null;
}
setTimeout(function(){
antiRobot |= 1;
antiRobotGo();
}, 100)
antiRobotGo();
}
antiRobotDefense();
</script>
<!-- keywords: sqlite3_vtab_rhs_value -->

<blockquote><pre>int sqlite3_vtab_rhs_value(sqlite3_index_info*, int, sqlite3_value **ppVal);
</pre></blockquote>
<p>
This API may only be used from within the <a href="../vtab.html#xbestindex">xBestIndex method</a>
of a <a href="../vtab.html">virtual table</a> implementation. The result of calling this interface
from outside of an xBestIndex method are undefined and probably harmful.</p>

<p>When the sqlite3_vtab_rhs_value(P,J,V) interface is invoked from within
the <a href="../vtab.html#xbestindex">xBestIndex</a> method of a <a href="../vtab.html">virtual table</a> implementation, with P being
a copy of the <a href="index_info.htm">sqlite3_index_info</a> object pointer passed into xBestIndex and
J being a 0-based index into P-&gt;aConstraint[], then this routine
attempts to set *V to the value of the right-hand operand of
that constraint if the right-hand operand is known.  If the
right-hand operand is not known, then *V is set to a NULL pointer.
The sqlite3_vtab_rhs_value(P,J,V) interface returns SQLITE_OK if
and only if *V is set to a value.  The sqlite3_vtab_rhs_value(P,J,V)
inteface returns SQLITE_NOTFOUND if the right-hand side of the J-th
constraint is not available.  The sqlite3_vtab_rhs_value() interface
can return an result code other than SQLITE_OK or SQLITE_NOTFOUND if
something goes wrong.</p>

<p>The sqlite3_vtab_rhs_value() interface is usually only successful if
the right-hand operand of a constraint is a literal value in the original
SQL statement.  If the right-hand operand is an expression or a reference
to some other column or a <a href="bind_blob.htm">host parameter</a>, then sqlite3_vtab_rhs_value()
will probably return <a href="../rescode.html#notfound">SQLITE_NOTFOUND</a>.</p>

<p>Some constraints, such as <a href="c_index_constraint_eq.htm">SQLITE_INDEX_CONSTRAINT_ISNULL</a> and
<a href="c_index_constraint_eq.htm">SQLITE_INDEX_CONSTRAINT_ISNOTNULL</a>, have no right-hand operand.  For such
constraints, sqlite3_vtab_rhs_value() always returns SQLITE_NOTFOUND.</p>

<p>The <a href="value.htm">sqlite3_value</a> object returned in *V is a protected sqlite3_value
and remains valid for the duration of the xBestIndex method call.
When xBestIndex returns, the sqlite3_value object returned by
sqlite3_vtab_rhs_value() is automatically deallocated.</p>

<p>The "_rhs_" in the name of this routine is an abbreviation for
"Right-Hand Side".
</p><p>See also lists of
  <a href="objlist.htm">Objects</a>,
  <a href="constlist.htm">Constants</a>, and
  <a href="funclist.htm">Functions</a>.</p>

</body></html>