<!DOCTYPE html><html><head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

<title>Dynamic String Object</title>
<!-- path=../ -->
</head>
<body>

<script>
function toggle_div(nm) {
var w = document.getElementById(nm);
if( w.style.display=="block" ){
w.style.display = "none";
}else{
w.style.display = "block";
}
}
function toggle_search() {
var w = document.getElementById("searchmenu");
if( w.style.display=="block" ){
w.style.display = "none";
} else {
w.style.display = "block";
setTimeout(function(){
document.getElementById("searchbox").focus()
}, 30);
}
}
function div_off(nm){document.getElementById(nm).style.display="none";}
window.onbeforeunload = function(e){div_off("submenu");}
/* Disable the Search feature if we are not operating from CGI, since */
/* Search is accomplished using CGI and will not work without it. */
if( !location.origin || !location.origin.match || !location.origin.match(/http/) ){
document.getElementById("search_menubutton").style.display = "none";
}
/* Used by the Hide/Show button beside syntax diagrams, to toggle the */
function hideorshow(btn,obj){
var x = document.getElementById(obj);
var b = document.getElementById(btn);
if( x.style.display!='none' ){
x.style.display = 'none';
b.innerHTML='show';
}else{
x.style.display = '';
b.innerHTML='hide';
}
return false;
}
var antiRobot = 0;
function antiRobotGo(){
if( antiRobot!=3 ) return;
antiRobot = 7;
var j = document.getElementById("mtimelink");
if(j && j.hasAttribute("data-href")) j.href=j.getAttribute("data-href");
}
function antiRobotDefense(){
document.body.onmousedown=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousedown=null;
}
document.body.onmousemove=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousemove=null;
}
setTimeout(function(){
antiRobot |= 1;
antiRobotGo();
}, 100)
antiRobotGo();
}
antiRobotDefense();
</script>
<!-- keywords: {dynamic string} sqlite3_str -->

<blockquote><pre>typedef struct sqlite3_str sqlite3_str;
</pre></blockquote>
<p>
An instance of the sqlite3_str object contains a dynamically-sized
string under construction.</p>

<p>The lifecycle of an sqlite3_str object is as follows:
</p><ol>
<li> The sqlite3_str object is created using <a href="str_new.htm">sqlite3_str_new()</a>.
</li><li> Text is appended to the sqlite3_str object using various
methods, such as <a href="str_append.htm">sqlite3_str_appendf()</a>.
</li><li> The sqlite3_str object is destroyed and the string it created
is returned using the <a href="str_finish.htm">sqlite3_str_finish()</a> interface.
</li></ol>
<p></p><p>1 Constructor using this object: <a href="str_new.htm">sqlite3_str_new()</a></p>
<p>1 Destructor using this object: <a href="str_finish.htm">sqlite3_str_finish()</a></p>
<p>9 Methods using this object:
</p><div class="columns" style="columns: 17em auto;">
<ul style="padding-top:0;">
<li><a href="str_append.htm">sqlite3_str_append</a></li>
<li><a href="str_append.htm">sqlite3_str_appendall</a></li>
<li><a href="str_append.htm">sqlite3_str_appendchar</a></li>
<li><a href="str_append.htm">sqlite3_str_appendf</a></li>
<li><a href="str_errcode.htm">sqlite3_str_errcode</a></li>
<li><a href="str_errcode.htm">sqlite3_str_length</a></li>
<li><a href="str_append.htm">sqlite3_str_reset</a></li>
<li><a href="str_errcode.htm">sqlite3_str_value</a></li>
<li><a href="str_append.htm">sqlite3_str_vappendf</a></li>
</ul>
</div>
<p></p>
<p>See also lists of
  <a href="objlist.htm">Objects</a>,
  <a href="constlist.htm">Constants</a>, and
  <a href="funclist.htm">Functions</a>.</p>

</body></html>