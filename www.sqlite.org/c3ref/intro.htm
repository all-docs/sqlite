<!DOCTYPE html><html><head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

<title>Introduction</title>
<!-- path=../ -->
</head>
<body>

<script>
function toggle_div(nm) {
var w = document.getElementById(nm);
if( w.style.display=="block" ){
w.style.display = "none";
}else{
w.style.display = "block";
}
}
function toggle_search() {
var w = document.getElementById("searchmenu");
if( w.style.display=="block" ){
w.style.display = "none";
} else {
w.style.display = "block";
setTimeout(function(){
document.getElementById("searchbox").focus()
}, 30);
}
}
function div_off(nm){document.getElementById(nm).style.display="none";}
window.onbeforeunload = function(e){div_off("submenu");}
/* Disable the Search feature if we are not operating from CGI, since */
/* Search is accomplished using CGI and will not work without it. */
if( !location.origin || !location.origin.match || !location.origin.match(/http/) ){
document.getElementById("search_menubutton").style.display = "none";
}
/* Used by the Hide/Show button beside syntax diagrams, to toggle the */
function hideorshow(btn,obj){
var x = document.getElementById(obj);
var b = document.getElementById(btn);
if( x.style.display!='none' ){
x.style.display = 'none';
b.innerHTML='show';
}else{
x.style.display = '';
b.innerHTML='hide';
}
return false;
}
var antiRobot = 0;
function antiRobotGo(){
if( antiRobot!=3 ) return;
antiRobot = 7;
var j = document.getElementById("mtimelink");
if(j && j.hasAttribute("data-href")) j.href=j.getAttribute("data-href");
}
function antiRobotDefense(){
document.body.onmousedown=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousedown=null;
}
document.body.onmousemove=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousemove=null;
}
setTimeout(function(){
antiRobot |= 1;
antiRobotGo();
}, 100)
antiRobotGo();
}
antiRobotDefense();
</script>


<h1 align="center">
C-language Interface Specification for SQLite
</h1>

<p>These pages are intended to be a precise and detailed specification.
For a tutorial introduction, see instead:
</p><ul>
<li><a href="../quickstart.html">SQLite In 5 Minutes Or Less</a> and/or
</li><li>the <a href="../cintro.html">Introduction To The SQLite C/C++ Interface</a>.
</li></ul>
This same content is also available as a
<a href="../capi3ref.html">single large HTML file</a>.
<p></p>

<p>The SQLite interface elements can be grouped into three categories:</p>

<ol>
<li><p><a href="objlist.htm"><b>List Of Objects.</b></a>
    This is a list of all abstract objects and datatypes used by the
    SQLite library.  There are couple dozen objects in total, but
    the two most important objects are:
    A database connection object <a href="sqlite3.htm">sqlite3</a>, and the
    prepared statement object <a href="stmt.htm">sqlite3_stmt</a>.</p></li>

<li><p><a href="constlist.htm"><b>List Of Constants.</b></a>
    This is a list of numeric constants used by SQLite and represented by
    #defines in the sqlite3.h header file.  These constants
    are things such as numeric <a href="../rescode.html">result codes</a> from
    various interfaces (ex: <a href="../rescode.html#ok">SQLITE_OK</a>) or flags passed
    into functions to control behavior
    (ex: <a href="c_open_autoproxy.htm">SQLITE_OPEN_READONLY</a>).</p></li>

<li><p><a href="funclist.htm"><b>List Of Functions.</b></a>
    This is a list of all functions and methods operating on the
    <a href="objlist.htm">objects</a> and using and/or
    returning <a href="constlist.htm">constants</a>.  There
    are many functions, but most applications only use a handful.
    </p></li>
</ol>



</body></html>