<!DOCTYPE html><html><head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

<title>SQLite Release 3.37.1 On 2021-12-30</title>
<!-- path=../ -->
</head>
<body>

<script>
function toggle_div(nm) {
var w = document.getElementById(nm);
if( w.style.display=="block" ){
w.style.display = "none";
}else{
w.style.display = "block";
}
}
function toggle_search() {
var w = document.getElementById("searchmenu");
if( w.style.display=="block" ){
w.style.display = "none";
} else {
w.style.display = "block";
setTimeout(function(){
document.getElementById("searchbox").focus()
}, 30);
}
}
function div_off(nm){document.getElementById(nm).style.display="none";}
window.onbeforeunload = function(e){div_off("submenu");}
/* Disable the Search feature if we are not operating from CGI, since */
/* Search is accomplished using CGI and will not work without it. */
if( !location.origin || !location.origin.match || !location.origin.match(/http/) ){
document.getElementById("search_menubutton").style.display = "none";
}
/* Used by the Hide/Show button beside syntax diagrams, to toggle the */
function hideorshow(btn,obj){
var x = document.getElementById(obj);
var b = document.getElementById(btn);
if( x.style.display!='none' ){
x.style.display = 'none';
b.innerHTML='show';
}else{
x.style.display = '';
b.innerHTML='hide';
}
return false;
}
var antiRobot = 0;
function antiRobotGo(){
if( antiRobot!=3 ) return;
antiRobot = 7;
var j = document.getElementById("mtimelink");
if(j && j.hasAttribute("data-href")) j.href=j.getAttribute("data-href");
}
function antiRobotDefense(){
document.body.onmousedown=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousedown=null;
}
document.body.onmousemove=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousemove=null;
}
setTimeout(function(){
antiRobot |= 1;
antiRobotGo();
}, 100)
antiRobotGo();
}
antiRobotDefense();
</script>
<h2>SQLite Release 3.37.1 On 2021-12-30</h2><p><b>Prior changes from version 3.37.0 (2021-11-27):</b></p>
<p></p><ol class="lessindent">
<li value="1"> <a href="../stricttables.html">STRICT tables</a> provide a prescriptive style of data type management,
     for developers who prefer that kind of thing.
</li><li> When adding columns that contain a
     <a href="../lang_createtable.html#ckconst">CHECK constraint</a> or a <a href="../gencol.html">generated column</a> containing a <a href="../lang_createtable.html#notnullconst">NOT NULL constraint</a>,
     the <a href="../lang_altertable.html#altertabaddcol">ALTER TABLE ADD COLUMN</a> now checks new constraints against
     preexisting rows in the database and will only proceed if no constraints
     are violated.
</li><li> Added the <a href="../pragma.html#pragma_table_list">PRAGMA table_list</a> statement.
</li><li> <a href="../cli.html">CLI</a> enhancements:
     <ol type="a">
     <li> Add the <a href="../cli.html#dotconn">.connection</a> command, allowing the CLI to keep multiple database
          connections open at the same time.
     </li><li> Add the <a href="../cli.html#safemode">--safe command-line option</a> that disables
          <a href="../cli.html#dotcmd">dot-commands</a> and SQL statements that might cause side-effects that extend
          beyond the single database file named on the command-line.
     </li><li> Performance improvements when reading SQL statements
          that span many lines.
     </li></ol>
</li><li> Added the <a href="../c3ref/autovacuum_pages.html">sqlite3_autovacuum_pages()</a> interface.
</li><li> The <a href="../c3ref/deserialize.html">sqlite3_deserialize()</a> does not and has never worked for the TEMP
     database.  That limitation is now noted in the documentation.
</li><li> The query planner now omits ORDER BY clauses on subqueries and views
     if removing those clauses does not change the semantics of the query.
</li><li> The <a href="../series.html">generate_series</a> table-valued function extension is modified so that
     the first parameter ("START") is now required.  This is done as a way to
     demonstrate how to write table-valued functions with required parameters.
     The legacy behavior is available using the -DZERO_ARGUMENT_GENERATE_SERIES
     compile-time option.
</li><li> Added new <a href="../c3ref/changes.html">sqlite3_changes64()</a> and <a href="../c3ref/total_changes.html">sqlite3_total_changes64()</a> interfaces.
</li><li> Added the <a href="../c3ref/c_open_autoproxy.html">SQLITE_OPEN_EXRESCODE</a> flag option to <a href="../c3ref/open.html">sqlite3_open_v2()</a>.
</li><li> Use less memory to hold the database schema.

</li></ol>
<p><b>Changes in this specific patch release, version 3.37.1 (2021-12-30):</b></p>
<p></p><ol class="lessindent">
<li value="12"> Fix a bug introduced by the <a href="../lang_upsert.html">UPSERT</a> enhancements of <a href="3_35_0.htm">version 3.35.0</a> that
     can cause incorrect byte-code to be generated for some obscure but valid
     SQL, possibly resulting in a NULL-pointer dereference.
</li><li> Fix an OOB read that can occur in <a href="../fts5.html">FTS5</a> when reading corrupt database files.
</li><li> Improved robustness of the --safe option in the <a href="../cli.html">CLI</a>.
</li><li> Other minor fixes to assert() statements and test cases.

<p><b>Hashes:</b>
</p></li><li>SQLITE_SOURCE_ID: 2021-12-30 15:30:28 378629bf2ea546f73eee84063c5358439a12f7300e433f18c9e1bddd948dea62
</li><li>SHA3-256 for sqlite3.c: 915afb3f29c2d217ea0c283326a9df7d505e6c73b40236f0b33ded91f812d174

</li></ol><p></p>

      <p>A <a href="../changes.html">complete list of SQLite releases</a>
      in a single page and a <a href="../chronology.html">chronology</a> are both also available.
      A detailed history of every
      check-in is available at
      <a href="https://sqlite.org/src/timeline">
      SQLite version control site</a>.</p>
    

</body></html>