<!DOCTYPE html><html><head>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

<title>SQLite Release 3.7.12 On 2012-05-14</title>
<!-- path=../ -->
</head>
<body>

<script>
function toggle_div(nm) {
var w = document.getElementById(nm);
if( w.style.display=="block" ){
w.style.display = "none";
}else{
w.style.display = "block";
}
}
function toggle_search() {
var w = document.getElementById("searchmenu");
if( w.style.display=="block" ){
w.style.display = "none";
} else {
w.style.display = "block";
setTimeout(function(){
document.getElementById("searchbox").focus()
}, 30);
}
}
function div_off(nm){document.getElementById(nm).style.display="none";}
window.onbeforeunload = function(e){div_off("submenu");}
/* Disable the Search feature if we are not operating from CGI, since */
/* Search is accomplished using CGI and will not work without it. */
if( !location.origin || !location.origin.match || !location.origin.match(/http/) ){
document.getElementById("search_menubutton").style.display = "none";
}
/* Used by the Hide/Show button beside syntax diagrams, to toggle the */
function hideorshow(btn,obj){
var x = document.getElementById(obj);
var b = document.getElementById(btn);
if( x.style.display!='none' ){
x.style.display = 'none';
b.innerHTML='show';
}else{
x.style.display = '';
b.innerHTML='hide';
}
return false;
}
var antiRobot = 0;
function antiRobotGo(){
if( antiRobot!=3 ) return;
antiRobot = 7;
var j = document.getElementById("mtimelink");
if(j && j.hasAttribute("data-href")) j.href=j.getAttribute("data-href");
}
function antiRobotDefense(){
document.body.onmousedown=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousedown=null;
}
document.body.onmousemove=function(){
antiRobot |= 2;
antiRobotGo();
document.body.onmousemove=null;
}
setTimeout(function(){
antiRobot |= 1;
antiRobotGo();
}, 100)
antiRobotGo();
}
antiRobotDefense();
</script>
<h2>SQLite Release 3.7.12 On 2012-05-14</h2><p></p><ol class="lessindent">
<li>Add the <a href="../c3ref/c_dbstatus_options.html#sqlitedbstatuscachewrite">SQLITE_DBSTATUS_CACHE_WRITE</a> option for <a href="../c3ref/db_status.html">sqlite3_db_status()</a>.
</li><li>Optimize the <a href="../lang_corefunc.html#typeof">typeof()</a> and <a href="../lang_corefunc.html#length">length()</a> SQL functions so that they avoid
    unnecessary reading of database content from disk.
</li><li>Add the <a href="../fts3.html#*fts4mergecmd">FTS4 "merge" command</a>, the <a href="../fts3.html#*fts4automergecmd">FTS4 "automerge" command</a>, and
    the <a href="../fts3.html#*fts4ickcmd">FTS4 "integrity-check" command</a>.
</li><li>Report the name of specific <a href="../lang_createtable.html#ckconst">CHECK</a> constraints that fail.
</li><li>In the command-line shell, use popen() instead of fopen() if the first
    character of the argument to the ".output" command is "|".
</li><li>Make use of OVERLAPPED in the windows <a href="../vfs.html">VFS</a> to avoid some system calls
    and thereby obtain a performance improvement.
</li><li>More aggressive optimization of the AND operator when one side or the
    other is always false.
</li><li>Improved performance of queries with many OR-connected terms in the
    WHERE clause that can all be indexed.
</li><li>Add the <a href="../compile.html#rtree_int_only">SQLITE_RTREE_INT_ONLY</a> compile-time option to force the
    <a href="../rtree.html">R*Tree Extension Module</a> to use integer instead of
    floating point values for both storage and computation.
</li><li>Enhance the <a href="../pragma.html#pragma_integrity_check">PRAGMA integrity_check</a> command to use much less memory when
    processing multi-gigabyte databases.
</li><li>New interfaces added to the test_quota.c add-on module.
</li><li>Added the ".trace" dot-command to the command-line shell.
</li><li>Allow virtual table constructors to be invoked recursively.
</li><li>Improved optimization of ORDER BY clauses on compound queries.
</li><li>Improved optimization of aggregate subqueries contained within an
    aggregate query.
</li><li>Bug fix: Fix the <a href="../lang_savepoint.html">RELEASE</a> command so that it does not cancel pending
    queries.  This repairs a problem introduced in 3.7.11.
</li><li>Bug fix: Do not discard the DISTINCT as superfluous unless a subset of
    the result set is subject to a UNIQUE constraint <em>and</em> it none
    of the columns in that subset can be NULL.
    Ticket <a href="https://sqlite.org/src/info/385a5b56b9">385a5b56b9</a>.
</li><li>Bug fix: Do not optimize away an ORDER BY clause that has the same terms
    as a UNIQUE index unless those terms are also NOT NULL.
    Ticket <a href="https://sqlite.org/src/info/2a5629202f">2a5629202f</a>.
</li><li>SQLITE_SOURCE_ID:
    "2012-05-14 01:41:23 8654aa9540fe9fd210899d83d17f3f407096c004"
</li><li>SHA1 for sqlite3.c: 57e2104a0f7b3f528e7f6b7a8e553e2357ccd2e1


</li></ol><p></p>

      <p>A <a href="../changes.html">complete list of SQLite releases</a>
      in a single page and a <a href="../chronology.html">chronology</a> are both also available.
      A detailed history of every
      check-in is available at
      <a href="https://sqlite.org/src/timeline">
      SQLite version control site</a>.</p>
    

</body></html>